{
	"info": {
		"_postman_id": "0039dbb8-069a-42fa-9623-eff764317c84",
		"name": "level 2 collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10218772",
		"_collection_link": "https://martian-capsule-539259.postman.co/workspace/96470245-9cbd-4c35-bfda-cf28c4282e43/collection/10218772-0039dbb8-069a-42fa-9623-eff764317c84?action=share&source=collection_link&creator=10218772"
	},
	"item": [
		{
			"name": "aadhar",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const  username='Vin_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"6193517ce944ad3658b93dda\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"AadharQA\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const  username='deepak_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"6193517ce944ad3658b93dda\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"// postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\"; tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"6193517ce944ad3658b93dda\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"AadharQA\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"  setTimeout(checkStatusCode, 5000);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"61935091e944ad3658b93dd5\",\n            \"data\": {\n                \"AadhaarImage1\": \"https://qa-persist.signzy.xyz/api/files/3001539/download/5efaa309f8724bc5a9820a8cade443860d054b3fcb344748905d619999e97ded.png\",\n                \"AadhaarImage2\": \"https://qa-persist.signzy.xyz/api/files/3001540/download/48b555db9eb541a0847818779d4e0d7924e26c9e92a749fe8a66e96773dfa7f9.png\",\n                \"AadhaarName\": \"Deepak M\",\n                \"AadhaarUid\": \"599580211114\",\n                \"AadhaarVid\": false,\n                \"AadhaarDob\": \"28/12/1996\",\n                \"AadhaarYob\": \"1996\",\n                \"AadhaarPincode\": \"562123\",\n                \"AadhaarAddress\": \"S / O MUNIMARE GOWDA , 31 , GEJJEGADAHALLI DASANAPURALH ) , SHIVANAPURA , BANGALORE , KARNATAKA - 562123\",\n                \"AadhaarGender\": \"Male\",\n                \"AadhaarUidHash\": \"b0146f10f4cd834388fa3db5965daa32b92a1dd3ffae5cf5dc7c79a29644b52c\",\n                \"type\": \"Aadhaar\",\n                \"widgetName\": \"Aadhaar\"\n            },\n            \"pageName\": \"Image Capture\",\n            \"flowId\": \"6193517ce944ad3658b93dda\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"  setTimeout(checkStatusCode, 5000);\r",
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data AadhaarImage1 is correct\"] = jsonData.result.input.data[0].data.AadhaarImage1 === \"https://qa-persist.signzy.xyz/api/files/3001539/download/5efaa309f8724bc5a9820a8cade443860d054b3fcb344748905d619999e97ded.png\";\r",
									"tests[\"jsonData.result.data AadhaarImage2 is correct\"] = jsonData.result.input.data[0].data.AadhaarImage2 === \"https://qa-persist.signzy.xyz/api/files/3001540/download/48b555db9eb541a0847818779d4e0d7924e26c9e92a749fe8a66e96773dfa7f9.png\";\r",
									"tests[\"jsonData.result.data AadhaarName is correct\"] = jsonData.result.input.data[0].data.AadhaarName === \"Deepak M\";\r",
									"tests[\"jsonData.result.data AadhaarUid is correct\"] = jsonData.result.input.data[0].data.AadhaarUid === \"599580211114\";\r",
									"tests[\"jsonData.result.data AadhaarVid is correct\"] = jsonData.result.input.data[0].data.AadhaarVid === false;\r",
									"\r",
									"tests[\"jsonData.result.data AadhaarDob is correct\"] = jsonData.result.input.data[0].data.AadhaarDob === \"28/12/1996\";\r",
									"tests[\"jsonData.result.data AadhaarYob is correct\"] = jsonData.result.input.data[0].data.AadhaarYob === \"1996\";\r",
									"tests[\"jsonData.result.data AadhaarPincode is correct\"] = jsonData.result.input.data[0].data.AadhaarPincode === \"562123\";\r",
									"tests[\"jsonData.result.data AadhaarAddress is correct\"] = jsonData.result.input.data[0].data.AadhaarAddress === \"S / O MUNIMARE GOWDA , 31 , GEJJEGADAHALLI DASANAPURALH ) , SHIVANAPURA , BANGALORE , KARNATAKA - 562123\";\r",
									"tests[\"jsonData.result.data AadhaarGender is correct\"] = jsonData.result.input.data[0].data.AadhaarGender === \"Male\";\r",
									"\r",
									"tests[\"jsonData.result.data AadhaarUidHash is correct\"] = jsonData.result.input.data[0].data.AadhaarUidHash === \"b0146f10f4cd834388fa3db5965daa32b92a1dd3ffae5cf5dc7c79a29644b52c\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"Aadhaar\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"Aadhaar\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output nameMatchScore is correct\"] = jsonData.result.output.pageResults[\"61935091e944ad3658b93dd5\"][0].textMatchData.nameMatchScore === 1;\r",
									"\r",
									"tests[\"jsonData.result.output dobMatchScore is correct\"] = jsonData.result.output.pageResults[\"61935091e944ad3658b93dd5\"][0].textMatchData.dobMatchScore === 1;\r",
									"\r",
									"tests[\"jsonData.result.output AadhaarUidMatchScore is correct\"] = jsonData.result.output.pageResults[\"61935091e944ad3658b93dd5\"][0].textMatchData.AadhaarUidMatchScore === 1;\r",
									"\r",
									"tests[\"jsonData.result.output AadhaarVidMatchScore is correct\"] = jsonData.result.output.pageResults[\"61935091e944ad3658b93dd5\"][0].textMatchData.AadhaarVidMatchScore === 0;\r",
									"\r",
									"tests[\"jsonData.result.output AadhaarYobMatchScore is correct\"] = jsonData.result.output.pageResults[\"61935091e944ad3658b93dd5\"][0].textMatchData.AadhaarYobMatchScore ===1;\r",
									"\r",
									"tests[\"jsonData.result.output AadhaarPincodeMatchScore is correct\"] = jsonData.result.output.pageResults[\"61935091e944ad3658b93dd5\"][0].textMatchData.AadhaarPincodeMatchScore ===1;\r",
									"\r",
									"tests[\"jsonData.result.output AadhaarAddressMatchScore is correct\"] = jsonData.result.output.pageResults[\"61935091e944ad3658b93dd5\"][0].textMatchData.AadhaarAddressMatchScore ===1;\r",
									"tests[\"jsonData.result.output AadhaarGenderMatchScore is correct\"] = jsonData.result.output.pageResults[\"61935091e944ad3658b93dd5\"][0].textMatchData.AadhaarGenderMatchScore === 1;\r",
									"\r",
									"pm.test(\"console log\", function () {\r",
									"var jsonData1 = pm.response.json();\r",
									"console.log(jsonData1.results)\r",
									"});\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"true\";\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DE_Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"reportUrl\", jsonData.result.reportUrl);\r",
									"tests[\"jsonData.result finalResult is correct\"] = jsonData.result.finalResult.result=== \"uncertain\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://blender-preproduction.signzy.app/iciciruleengine/getDEReport/{{requestId}}",
							"protocol": "https",
							"host": [
								"blender-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"iciciruleengine",
								"getDEReport",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ICWAI Memeber",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"619f143e3eca130cc43212e3\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"ICWAI\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='deepak_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"619f143e3eca130cc43212e3\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"// postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\"; tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"619f143e3eca130cc43212e3\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"ICWAI\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"debug\":true,\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"61935091e944ad3658b93dd5\",\n            \"data\": {\n                \"ICWAIImageMember\": \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\",\n                \"ICWAIEntityNameMember\": \"UNICORN\",\n                \"ICWAIMembershipDateMember\": \"UNICORN\",\n                \"ICWAIAddressMember\": \"UNICORN\",\n                \"ICWAIstate\": \"UNICORN\",\n                \"ICWAIdistrict\": \"UNICORN\",\n                \"ICWAIcity\": \"UNICORN\",\n                \"ICWAIcountry\": \"UNICORN\",\n                \"ICWAIpincode\": \"123123\",\n                \"type\": \"ICWAI(Member)\",\n                \"widgetName\": \"ICWAI(Member)\"\n            },\n            \"pageName\": \"Image Capture\",\n            \"flowId\": \"6193517ce944ad3658b93dda\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data ICWAIImageMember is correct\"] = jsonData.result.input.data[0].data.ICWAIImageMember === \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIEntityNameMember is correct\"] = jsonData.result.input.data[0].data.ICWAIEntityNameMember === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIMembershipDateMember is correct\"] = jsonData.result.input.data[0].data.ICWAIMembershipDateMember === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIAddressMember is correct\"] = jsonData.result.input.data[0].data.ICWAIAddressMember === \"UNICORN\";\r",
									"tests[\"jsonData.result.data ICWAIstate is correct\"] = jsonData.result.input.data[0].data.ICWAIstate === \"UNICORN\";\r",
									"tests[\"jsonData.result.data ICWAIdistrict is correct\"] = jsonData.result.input.data[0].data.ICWAIdistrict === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIcity is correct\"] = jsonData.result.input.data[0].data.ICWAIcity === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIcountry is correct\"] = jsonData.result.input.data[0].data.ICWAIcountry === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIpincode is correct\"] = jsonData.result.input.data[0].data.ICWAIpincode === \"123123\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"ICWAI(Member)\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"ICWAI(Member)\";\r",
									"\r",
									"\r",
									"pm.test(\"console log\", function () {\r",
									"var jsonData1 = pm.response.json();\r",
									"console.log(jsonData1.results)\r",
									"});\r",
									"\r",
									"// tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"true\";\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DE_Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"reportUrl\", jsonData.result.reportUrl);\r",
									"tests[\"jsonData.result finalResult is correct\"] = jsonData.result.finalResult.result=== \"uncertain\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://blender-preproduction.signzy.app/iciciruleengine/getDEReport/{{requestId}}",
							"protocol": "https",
							"host": [
								"blender-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"iciciruleengine",
								"getDEReport",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ICWAI Firm",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"619f19863eca130cc432132f\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"ICWAI firm\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='deepak_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"619f19863eca130cc432132f\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"// postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\"; tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"619f19863eca130cc432132f\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"ICWAI firm\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"61935091e944ad3658b93dd5\",\n            \"data\": {\n                \"ICWAIImageFirm\": \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\",\n                \"ICWAIEntityNameFirm\": \"fsadfsd\",\n                \"ICWAIConstitutionDateFirm\": \"dfasdfafa\",\n                \"ICWAIAddressFirm\": \"UNICORN\",\n                \"ICWAIstate\": \"UNICORN\",\n                \"ICWAIdistrict\": \"UNICORN\",\n                \"ICWAIcity\": \"UNICORN\",\n                \"ICWAIcountry\": \"UNICORN\",\n                \"ICWAIpincode\": \"123123\",\n                \"type\": \"ICWAI(Firm)\",\n                \"widgetName\": \"ICWAI(Firm)\"\n            },\n            \"pageName\": \"Image Capture\",\n            \"flowId\": \"6193517ce944ad3658b93dda\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data ICWAIImageFirm is correct\"] = jsonData.result.input.data[0].data.ICWAIImageFirm === \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIEntityNameFirm is correct\"] = jsonData.result.input.data[0].data.ICWAIEntityNameFirm === \"fsadfsd\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIConstitutionDateFirm is correct\"] = jsonData.result.input.data[0].data.ICWAIConstitutionDateFirm === \"dfasdfafa\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIAddressFirm is correct\"] = jsonData.result.input.data[0].data.ICWAIAddressFirm === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIstate is correct\"] = jsonData.result.input.data[0].data.ICWAIstate === \"UNICORN\";\r",
									"tests[\"jsonData.result.data ICWAIdistrict is correct\"] = jsonData.result.input.data[0].data.ICWAIdistrict === \"UNICORN\";\r",
									"tests[\"jsonData.result.data ICWAIcity is correct\"] = jsonData.result.input.data[0].data.ICWAIcity === \"UNICORN\";\r",
									"tests[\"jsonData.result.data ICWAIcountry is correct\"] = jsonData.result.input.data[0].data.ICWAIcountry === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data ICWAIpincode is correct\"] = jsonData.result.input.data[0].data.ICWAIpincode === \"123123\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"ICWAI(Firm)\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"ICWAI(Firm)\";\r",
									"\r",
									"\r",
									"pm.test(\"console log\", function () {\r",
									"var jsonData1 = pm.response.json();\r",
									"console.log(jsonData1.results)\r",
									"});\r",
									"\r",
									"// tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"true\";\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DE_Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"reportUrl\", jsonData.result.reportUrl);\r",
									"tests[\"jsonData.result finalResult is correct\"] = jsonData.result.finalResult.result=== \"uncertain\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://blender-preproduction.signzy.app/iciciruleengine/getDEReport/{{requestId}}",
							"protocol": "https",
							"host": [
								"blender-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"iciciruleengine",
								"getDEReport",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "udhyog",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"61dbefd1680db4809a7ad08f\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"Udyog\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='deepak_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"61dbefd1680db4809a7ad08f\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"// postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\"; tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"61dbefd1680db4809a7ad08f\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"Udyog\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"61dbeefa20060b7af6f4fd2e\",\n            \"data\": {\n                \"udhyogAadhaarImage\": \"https://preproduction-persist.signzy.tech/api/files/27471237/download/700df9f88a484986b34d9f9f43fe46deac0eebb6412f445cab7c6887a010f562.jpg\",\n                \"udhyogUamNumber\": \"MH26B0233955\",\n                \"udhyogNameofEnterprise\": \"AHT CENTERING PLATE SUPPLIER & FABRICATION\",\n                \"udhyogDicName\": \"PUNE\",\n                \"udhyogState\": \"MAHARASHTRA\",\n                \"type\": \"Udhyog Aadhaar By UAN\",\n                \"widgetName\": \"Udhyog Aadhaar By UAN\"\n            },\n            \"pageName\": \"Image Capture\",\n            \"flowId\": \"61dbefd1680db4809a7ad08f\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data AadhaarImage1 is correct\"] = jsonData.result.input.data[0].data.udhyogAadhaarImage === \"https://preproduction-persist.signzy.tech/api/files/27471237/download/700df9f88a484986b34d9f9f43fe46deac0eebb6412f445cab7c6887a010f562.jpg\";\r",
									"tests[\"jsonData.result.data udhyogUamNumber is correct\"] = jsonData.result.input.data[0].data.udhyogUamNumber === \"MH26B0233955\";\r",
									"tests[\"jsonData.result.data enterprise is correct\"] = jsonData.result.input.data[0].data.udhyogNameofEnterprise === \"AHT CENTERING PLATE SUPPLIER & FABRICATION\";\r",
									"tests[\"jsonData.result.data udhyogDicName is correct\"] = jsonData.result.input.data[0].data.udhyogDicName === \"PUNE\";\r",
									"\r",
									"tests[\"jsonData.result.data udhyogState is correct\"] = jsonData.result.input.data[0].data.udhyogState === \"MAHARASHTRA\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"Udhyog Aadhaar By UAN\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"Udhyog Aadhaar By UAN\";\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"console log\", function () {\r",
									"var jsonData1 = pm.response.json();\r",
									"console.log(jsonData1.results)\r",
									"});\r",
									"\r",
									"// tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"true\";\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DE_Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"reportUrl\", jsonData.result.reportUrl);\r",
									"tests[\"jsonData.result finalResult is correct\"] = jsonData.result.finalResult.result=== \"uncertain\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://blender-preproduction.signzy.app/iciciruleengine/getDEReport/{{requestId}}",
							"protocol": "https",
							"host": [
								"blender-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"iciciruleengine",
								"getDEReport",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "faceMatch",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"61dd4f4b20060b7af6f52294\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"cross match\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='deepak_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"61dd4f4b20060b7af6f52294\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"// postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\"; tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"61dd4f4b20060b7af6f52294\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"cross match\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"61dd4ea3680db4809a7af614\",\n            \"data\": {\n                \"AadhaarImage1\": \"https://qa-persist.signzy.xyz/api/files/3001539/download/5efaa309f8724bc5a9820a8cade443860d054b3fcb344748905d619999e97ded.png\",\n                \"AadhaarImage2\": \"https://qa-persist.signzy.xyz/api/files/3001540/download/48b555db9eb541a0847818779d4e0d7924e26c9e92a749fe8a66e96773dfa7f9.png\",\n                \"AadhaarName\": \"Deepak M\",\n                \"AadhaarUid\": \"000000001114\",\n                \"AadhaarVid\": false,\n                \"AadhaarDob\": \"28/12/1996\",\n                \"AadhaarYob\": \"1996\",\n                \"AadhaarPincode\": \"562123\",\n                \"AadhaarAddress\": \"S / O MUNIMARE GOWDA , 31 , GEJJEGADAHALLI DASANAPURALH ) , SHIVANAPURA , BANGALORE , KARNATAKA - 562123\",\n                \"AadhaarGender\": \"Male\",\n                \"AadhaarUidHash\": \"b0146f10f4cd834388fa3db5965daa32b92a1dd3ffae5cf5dc7c79a29644b52c\",\n                \"type\": \"Aadhaar\",\n                \"widgetName\": \"Aadhaar\"\n            },\n            \"pageName\": \"Business PAN\",\n            \"flowId\": \"61dd4f4b20060b7af6f52294\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        },\n        {\n            \"pageId\": \"61dd4ee3680db4809a7af629\",\n            \"data\": {\n                \"DrivingLicenseImage1\": \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\",\n                \"DrivingLicenseImage2\": \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\",\n                \"DrivingLicenseName\": \"DEEPAK M\",\n                \"DrivingLicenseIssueDate\": \"31/10/2017\",\n                \"DrivingLicenseExpiryDate\": \"30/10/2037\",\n                \"DrivingLicenseNumber\": \"KA52 20170008837\",\n                \"DrivingLicenseGuardianName\": \"MUNIMAREGOWDA\",\n                \"DrivingLicenseAddress\": \"31,GEWAGAGADAHALLI,POST,DASANAPURA HOBLI\",\n                \"DrivingLicenseDLType\": \"LMV\",\n                \"DrivingLicenseDob\": \"28/12/1996\",\n                \"type\": \"Driving License\",\n                \"widgetName\": \"Driving License\"\n            },\n            \"pageName\": \"Proof Of Entity1\",\n            \"flowId\": \"61dd4f4b20060b7af6f52294\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data AadhaarImage1 is correct\"] = jsonData.result.input.data[0].data.AadhaarImage1 === \"https://qa-persist.signzy.xyz/api/files/3001539/download/5efaa309f8724bc5a9820a8cade443860d054b3fcb344748905d619999e97ded.png\";\r",
									"tests[\"jsonData.result.data AadhaarImage2 is correct\"] = jsonData.result.input.data[0].data.AadhaarImage2 === \"https://qa-persist.signzy.xyz/api/files/3001540/download/48b555db9eb541a0847818779d4e0d7924e26c9e92a749fe8a66e96773dfa7f9.png\";\r",
									"tests[\"jsonData.result.data AadhaarName is correct\"] = jsonData.result.input.data[0].data.AadhaarName === \"Deepak M\";\r",
									"tests[\"jsonData.result.data AadhaarUid is correct\"] = jsonData.result.input.data[0].data.AadhaarUid === \"000000001114\";\r",
									"tests[\"jsonData.result.data AadhaarVid is correct\"] = jsonData.result.input.data[0].data.AadhaarVid === false;\r",
									"\r",
									"tests[\"jsonData.result.data AadhaarDob is correct\"] = jsonData.result.input.data[0].data.AadhaarDob === \"28/12/1996\";\r",
									"tests[\"jsonData.result.data AadhaarYob is correct\"] = jsonData.result.input.data[0].data.AadhaarYob === \"1996\";\r",
									"tests[\"jsonData.result.data AadhaarPincode is correct\"] = jsonData.result.input.data[0].data.AadhaarPincode === \"562123\";\r",
									"tests[\"jsonData.result.data AadhaarAddress is correct\"] = jsonData.result.input.data[0].data.AadhaarAddress === \"S / O MUNIMARE GOWDA , 31 , GEJJEGADAHALLI DASANAPURALH ) , SHIVANAPURA , BANGALORE , KARNATAKA - 562123\";\r",
									"tests[\"jsonData.result.data AadhaarGender is correct\"] = jsonData.result.input.data[0].data.AadhaarGender === \"Male\";\r",
									"\r",
									"tests[\"jsonData.result.data AadhaarUidHash is correct\"] = jsonData.result.input.data[0].data.AadhaarUidHash === \"b0146f10f4cd834388fa3db5965daa32b92a1dd3ffae5cf5dc7c79a29644b52c\";\r",
									"\r",
									" tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"Aadhaar\";\r",
									"\r",
									" tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"Aadhaar\";\r",
									"\r",
									"// driving data\r",
									"tests[\"jsonData.result.data DrivingLicenseImage1 is correct\"] = jsonData.result.input.data[1].data.DrivingLicenseImage1 === \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\";\r",
									"tests[\"jsonData.result.data DrivingLicenseImage2 is correct\"] = jsonData.result.input.data[1].data.DrivingLicenseImage2 === \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\";\r",
									"tests[\"jsonData.result.data DrivingLicenseName is correct\"] = jsonData.result.input.data[1].data.DrivingLicenseName === \"DEEPAK M\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseIssueDate is correct\"] = jsonData.result.input.data[1].data.DrivingLicenseIssueDate === \"31/10/2017\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseExpiryDate is correct\"] = jsonData.result.input.data[1].data.DrivingLicenseExpiryDate === \"30/10/2037\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseNumber is correct\"] = jsonData.result.input.data[1].data.DrivingLicenseNumber === \"KA52 20170008837\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseGuardianName is correct\"] = jsonData.result.input.data[1].data.DrivingLicenseGuardianName === \"MUNIMAREGOWDA\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseAddress is correct\"] = jsonData.result.input.data[1].data.DrivingLicenseAddress === \"31,GEWAGAGADAHALLI,POST,DASANAPURA HOBLI\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseDLType is correct\"] = jsonData.result.input.data[1].data.DrivingLicenseDLType === \"LMV\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseDob is correct\"] = jsonData.result.input.data[1].data.DrivingLicenseDob === \"28/12/1996\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[1].data.type === \"Driving License\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[1].data.type === \"Driving License\";\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"console log\", function () {\r",
									"var jsonData1 = pm.response.json();\r",
									"console.log(jsonData1.results)\r",
									"});\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"true\";\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DE_Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"reportUrl\", jsonData.result.reportUrl);\r",
									"tests[\"jsonData.result finalResult is correct\"] = jsonData.result.finalResult.result=== \"true\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://blender-preproduction.signzy.app/iciciruleengine/getDEReport/{{requestId}}",
							"protocol": "https",
							"host": [
								"blender-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"iciciruleengine",
								"getDEReport",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "individual pan",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"6195f145796753418a0c5c6d\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"Individual Pan QA\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='deepak_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"6195f145796753418a0c5c6d\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\"; tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"6195f145796753418a0c5c6d\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"Individual Pan QA\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"6179203db84435a582a62e72\",\n            \"data\": {\n                \"IndividualPanImage\": \"https://preproduction-persist.signzy.tech/api/files/27344915/download/372747b4a1634f50aa4b8751f531120f35f8859ab241474583e38de0c5f92d31.png\",\n                \"IndividualPanName\": \"DEEPAK M\",\n                \"IndividualPanFatherName\": \"MUNIMARE GOWDA\",\n                \"IndividualPanDateOfBirth\": \"28/12/1996\",\n                \"IndividualPanPanNumber\": \"EINPD4266C\",\n                \"type\": \"Individual Pan\",\n                \"widgetName\": \"Individual PAN\"\n            },\n            \"pageName\": \"pan Individual\",\n            \"flowId\": \"6195f145796753418a0c5c6d\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data IndividualPanImage is correct\"] = jsonData.result.input.data[0].data.IndividualPanImage === \"https://preproduction-persist.signzy.tech/api/files/27344915/download/372747b4a1634f50aa4b8751f531120f35f8859ab241474583e38de0c5f92d31.png\";\r",
									"tests[\"jsonData.result.data IndividualPanName is correct\"] = jsonData.result.input.data[0].data.IndividualPanName === \"DEEPAK M\";\r",
									"tests[\"jsonData.result.data IndividualPanFatherName is correct\"] = jsonData.result.input.data[0].data.IndividualPanFatherName === \"MUNIMARE GOWDA\";\r",
									"\r",
									"tests[\"jsonData.result.data IndividualPanDateOfBirth is correct\"] = jsonData.result.input.data[0].data.IndividualPanDateOfBirth === \"28/12/1996\";\r",
									"\r",
									"tests[\"jsonData.result.data IndividualPanPanNumber is correct\"] = jsonData.result.input.data[0].data.IndividualPanPanNumber === \"EINPD4266C\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"Individual Pan\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"Individual PAN\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output nameMatchScore is correct\"] = jsonData.result.output.pageResults[\"6179203db84435a582a62e72\"][0].textMatchData.nameMatchScore === 1;\r",
									"\r",
									"tests[\"jsonData.result.output dobMatchScore is correct\"] = jsonData.result.output.pageResults[\"6179203db84435a582a62e72\"][0].textMatchData.dobMatchScore === 1;\r",
									"\r",
									"tests[\"jsonData.result.output IndividualPanFatherNameMatchScore is correct\"] = jsonData.result.output.pageResults[\"6179203db84435a582a62e72\"][0].textMatchData.IndividualPanFatherNameMatchScore === 1;\r",
									"\r",
									"tests[\"jsonData.result.output IndividualPanPanNumberMatchScore is correct\"] = jsonData.result.output.pageResults[\"6179203db84435a582a62e72\"][0].textMatchData.IndividualPanPanNumberMatchScore === 1;\r",
									"pm.test(\"console log\", function () {\r",
									"var jsonData1 = pm.response.json();\r",
									"console.log(jsonData1.results)\r",
									"});\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"false\";\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DE_Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"reportUrl\", jsonData.result.reportUrl);\r",
									"tests[\"jsonData.result finalResult is correct\"] = jsonData.result.finalResult.result=== \"true\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://blender-preproduction.signzy.app/iciciruleengine/getDEReport/{{requestId}}",
							"protocol": "https",
							"host": [
								"blender-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"iciciruleengine",
								"getDEReport",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "business",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"6195e9df796753418a0c5c40\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"BusinessQA\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='deepak_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"6195e9df796753418a0c5c40\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\"; tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"6195e9df796753418a0c5c40\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"BusinessQA\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"6179203db84435a582a62e72\",\n            \"data\": {\n                \"IndividualPanImage\": \"https://preproduction-persist.signzy.tech/api/files/27344915/download/372747b4a1634f50aa4b8751f531120f35f8859ab241474583e38de0c5f92d31.png\",\n                \"IndividualPanName\": \"DEEPAK M\",\n                \"IndividualPanFatherName\": \"MUNIMARE GOWDA\",\n                \"IndividualPanDateOfBirth\": \"28/12/1996\",\n                \"IndividualPanPanNumber\": \"EINPD4266C\",\n                \"type\": \"Individual Pan\",\n                \"widgetName\": \"Individual PAN\"\n            },\n            \"pageName\": \"pan Individual\",\n            \"flowId\": \"6195f145796753418a0c5c6d\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data IndividualPanImage is correct\"] = jsonData.result.input.data[0].data.IndividualPanImage === \"https://preproduction-persist.signzy.tech/api/files/27344915/download/372747b4a1634f50aa4b8751f531120f35f8859ab241474583e38de0c5f92d31.png\";\r",
									"tests[\"jsonData.result.data IndividualPanName is correct\"] = jsonData.result.input.data[0].data.IndividualPanName === \"DEEPAK M\";\r",
									"tests[\"jsonData.result.data IndividualPanFatherName is correct\"] = jsonData.result.input.data[0].data.IndividualPanFatherName === \"MUNIMARE GOWDA\";\r",
									"\r",
									"tests[\"jsonData.result.data IndividualPanDateOfBirth is correct\"] = jsonData.result.input.data[0].data.IndividualPanDateOfBirth === \"28/12/1996\";\r",
									"\r",
									"tests[\"jsonData.result.data IndividualPanPanNumber is correct\"] = jsonData.result.input.data[0].data.IndividualPanPanNumber === \"EINPD4266C\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"Individual Pan\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"Individual PAN\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output nameMatchScore is correct\"] = jsonData.result.output.pageResults[\"6179203db84435a582a62e72\"][0].textMatchData.nameMatchScore === 1;\r",
									"\r",
									"tests[\"jsonData.result.output dobMatchScore is correct\"] = jsonData.result.output.pageResults[\"6179203db84435a582a62e72\"][0].textMatchData.dobMatchScore === 1;\r",
									"\r",
									"tests[\"jsonData.result.output IndividualPanFatherNameMatchScore is correct\"] = jsonData.result.output.pageResults[\"6179203db84435a582a62e72\"][0].textMatchData.IndividualPanFatherNameMatchScore === 1;\r",
									"\r",
									"tests[\"jsonData.result.output IndividualPanPanNumberMatchScore is correct\"] = jsonData.result.output.pageResults[\"6179203db84435a582a62e72\"][0].textMatchData.IndividualPanPanNumberMatchScore === 1;\r",
									"pm.test(\"console log\", function () {\r",
									"var jsonData1 = pm.response.json();\r",
									"console.log(jsonData1.results)\r",
									"});\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"false\";\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DE_Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"reportUrl\", jsonData.result.reportUrl);\r",
									"tests[\"jsonData.result finalResult is correct\"] = jsonData.result.finalResult.result=== \"true\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://blender-preproduction.signzy.app/iciciruleengine/getDEReport/{{requestId}}",
							"protocol": "https",
							"host": [
								"blender-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"iciciruleengine",
								"getDEReport",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "driving license",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"617b80f5075ba1e6385e2292\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"Test driving linsense\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"617b80f5075ba1e6385e2292\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\"; tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"617b80f5075ba1e6385e2292\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"Test driving linsense\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "m7E2qPdKVKcUFAxrQYLm9HizvLdeMECesS68kqA4AVPNejOVHLrABaF2QDBQlDYK",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"6188b4650aab85389ce19fdb\",\n            \"data\": {\n                \"DrivingLicenseImage1\": \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\",\n                \"DrivingLicenseImage2\": \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\",\n                \"DrivingLicenseName\": \"DEEPAK M\",\n                \"DrivingLicenseIssueDate\": \"31/10/2017\",\n                \"DrivingLicenseExpiryDate\": \"30/10/2037\",\n                \"DrivingLicenseNumber\": \"KA52 20170008837\",\n                \"DrivingLicenseGuardianName\": \"MUNIMAREGOWDA\",\n                \"DrivingLicenseAddress\": \"31,GEWAGAGADAHALLI,POST,DASANAPURA HOBLI\",\n                \"DrivingLicenseDLType\": \"LMV\",\n                \"DrivingLicenseDob\": \"28/12/1996\",\n                \"type\": \"Driving License\",\n                \"widgetName\": \"Driving License\"\n            },\n            \"pageName\": \"Image Capture\",\n            \"flowId\": \"617b80f5075ba1e6385e2292\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data DrivingLicenseImage1 is correct\"] = jsonData.result.input.data[0].data.DrivingLicenseImage1 === \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\";\r",
									"tests[\"jsonData.result.data DrivingLicenseImage2 is correct\"] = jsonData.result.input.data[0].data.DrivingLicenseImage2 === \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\";\r",
									"tests[\"jsonData.result.data DrivingLicenseName is correct\"] = jsonData.result.input.data[0].data.DrivingLicenseName === \"DEEPAK M\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseIssueDate is correct\"] = jsonData.result.input.data[0].data.DrivingLicenseIssueDate === \"31/10/2017\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseExpiryDate is correct\"] = jsonData.result.input.data[0].data.DrivingLicenseExpiryDate === \"30/10/2037\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseNumber is correct\"] = jsonData.result.input.data[0].data.DrivingLicenseNumber === \"KA52 20170008837\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseGuardianName is correct\"] = jsonData.result.input.data[0].data.DrivingLicenseGuardianName === \"MUNIMAREGOWDA\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseAddress is correct\"] = jsonData.result.input.data[0].data.DrivingLicenseAddress === \"31,GEWAGAGADAHALLI,POST,DASANAPURA HOBLI\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseDLType is correct\"] = jsonData.result.input.data[0].data.DrivingLicenseDLType === \"LMV\";\r",
									"\r",
									"tests[\"jsonData.result.data DrivingLicenseDob is correct\"] = jsonData.result.input.data[0].data.DrivingLicenseDob === \"28/12/1996\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"Driving License\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.type === \"Driving License\";\r",
									"\r",
									"\r",
									"// tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"true\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DE_Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://blender-preproduction.signzy.app/iciciruleengine/getDEReport/{{requestId}}",
							"protocol": "https",
							"host": [
								"blender-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"iciciruleengine",
								"getDEReport",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "passport",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"618e2284eb45b906417c263f\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"passport Test QA\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"618e2284eb45b906417c263f\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\"; tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"618e2284eb45b906417c263f\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"passport Test QA\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "m7E2qPdKVKcUFAxrQYLm9HizvLdeMECesS68kqA4AVPNejOVHLrABaF2QDBQlDYK",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"debug\": true,\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"6191ec709b23a79aef712f6e\",\n            \"data\": {\n                \"PassportImage1\": \"https://preproduction-persist.signzy.tech/api/files/27106567/download/86afd2aa1e294f7e827d990c606baed3dc62f035dd634294891c2ee25c7bbf41.jpg\",\n                \"PassportImage2\": \"https://preproduction-persist.signzy.tech/api/files/27106605/download/aa8888224d4b43959c113b1f499e0ea9b8ae00cfcba842418444741ec9ff6ccc.jpg\",\n                \"PassportName\": \"NAVEEN KUMBAR\",\n                \"PassportBirthDate\": \"20/12/1992\",\n                \"PassportGuardianName\": \"NAGAPPA\",\n                \"PassportIssueDate\": \"13/03/2018\",\n                \"PassportExpiryDate\": \"12/03/2028\",\n                \"PassportPassportNumber\": \"S0515694\",\n                \"PassportPincode\": \"582102\",\n                \"PassportAddress\": \"HOUSE NO 38,PANCHAXRI NAGAR,4TH CROSS BURBURE PLOT,GADAG PIN:582102,KARNATAKA,INDIA\",\n                \"PassportNationality\": \"IN\",\n                \"PassportFileNumber\": \"BN3060968128318\",\n                \"PassportPlaceOfBirth\": \"KOPPAL,KARNATAKA\",\n                \"PassportPlaceOfIssue\": \"BENGALURU\",\n                \"type\": \"Passort\",\n                \"widgetName\": \"Passport\"\n            },\n            \"pageName\": \"POA Registered\",\n            \"flowId\": \"618e2284eb45b906417c263f\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data PassportImage1 is correct\"] = jsonData.result.input.data[0].data.PassportImage1 === \"https://preproduction-persist.signzy.tech/api/files/27106567/download/86afd2aa1e294f7e827d990c606baed3dc62f035dd634294891c2ee25c7bbf41.jpg\";\r",
									"tests[\"jsonData.result.data PassportImage2 is correct\"] = jsonData.result.input.data[0].data.PassportImage2 === \"https://preproduction-persist.signzy.tech/api/files/27106605/download/aa8888224d4b43959c113b1f499e0ea9b8ae00cfcba842418444741ec9ff6ccc.jpg\";\r",
									"tests[\"jsonData.result.data PassportName is correct\"] = jsonData.result.input.data[0].data.PassportName === \"NAVEEN KUMBAR\";\r",
									"\r",
									"tests[\"jsonData.result.data PassportBirthDate is correct\"] = jsonData.result.input.data[0].data.PassportBirthDate === \"20/12/1992\";\r",
									"\r",
									"tests[\"jsonData.result.data PassportGuardianName is correct\"] = jsonData.result.input.data[0].data.PassportGuardianName === \"NAGAPPA\";\r",
									"\r",
									"tests[\"jsonData.result.data PassportIssueDate is correct\"] = jsonData.result.input.data[0].data.PassportIssueDate === \"13/03/2018\";\r",
									"\r",
									"tests[\"jsonData.result.data PassportExpiryDate is correct\"] = jsonData.result.input.data[0].data.PassportExpiryDate === \"12/03/2028\";\r",
									"\r",
									"tests[\"jsonData.result.data PassportPassportNumber is correct\"] = jsonData.result.input.data[0].data.PassportPassportNumber === \"S0515694\";\r",
									"tests[\"jsonData.result.data PassportPincode is correct\"] = jsonData.result.input.data[0].data.PassportPincode === \"582102\";\r",
									"tests[\"jsonData.result.data PassportAddress is correct\"] = jsonData.result.input.data[0].data.PassportAddress === \"HOUSE NO 38,PANCHAXRI NAGAR,4TH CROSS BURBURE PLOT,GADAG PIN:582102,KARNATAKA,INDIA\";\r",
									"\r",
									"tests[\"jsonData.result.data PassportNationality is correct\"] = jsonData.result.input.data[0].data.PassportNationality === \"IN\";\r",
									"\r",
									"tests[\"jsonData.result.data PassportFileNumber is correct\"] = jsonData.result.input.data[0].data.PassportFileNumber === \"BN3060968128318\";\r",
									"\r",
									"tests[\"jsonData.result.data PassportPlaceOfBirth is correct\"] = jsonData.result.input.data[0].data.PassportPlaceOfBirth === \"KOPPAL,KARNATAKA\";\r",
									"\r",
									"tests[\"jsonData.result.data PassportPlaceOfIssue is correct\"] = jsonData.result.input.data[0].data.PassportPlaceOfIssue === \"BENGALURU\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"Passort\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"Passort\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output nameMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.nameMatchScore === 1;\r",
									"tests[\"jsonData.result.output dobMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.dobMatchScore === 1;\r",
									"tests[\"jsonData.result.output PassportGuardianNameMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.PassportGuardianNameMatchScore === 1; \r",
									"\r",
									"tests[\"jsonData.result.output PassportIssueDateMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.PassportIssueDateMatchScore === 1;\r",
									"\r",
									" tests[\"jsonData.result.output PassportExpiryDateMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.PassportExpiryDateMatchScore === 1; \r",
									"\r",
									" tests[\"jsonData.result.output PassportPassportNumberMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.PassportPassportNumberMatchScore === 1; \r",
									"\r",
									" tests[\"jsonData.result.output PassportPincodeMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.PassportPincodeMatchScore === 1; \r",
									" tests[\"jsonData.result.output PassportAddressMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.PassportAddressMatchScore === 1;\r",
									"\r",
									" tests[\"jsonData.result.output PassportNationalityMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.PassportNationalityMatchScore === 1;\r",
									"  tests[\"jsonData.result.output PassportFileNumberMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.PassportFileNumberMatchScore === 1;\r",
									"   tests[\"jsonData.result.output PassportPlaceOfBirthMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.PassportPlaceOfBirthMatchScore === 1;\r",
									"     tests[\"jsonData.result.output PassportPlaceOfIssueMatchScore is correct\"] = jsonData.result.output.pageResults[\"6191ec709b23a79aef712f6e\"][0].textMatchData.PassportPlaceOfIssueMatchScore === 1;\r",
									"pm.test(\"console log\", function () {\r",
									"    var jsonData1 = pm.response.json();\r",
									"    console.log(jsonData1.results)\r",
									"});\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"true\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Voter Id",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"61925ee3e944ad3658b933e2\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"VoterId\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"61925ee3e944ad3658b933e2\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\"; tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"61925ee3e944ad3658b933e2\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"VoterId\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "m7E2qPdKVKcUFAxrQYLm9HizvLdeMECesS68kqA4AVPNejOVHLrABaF2QDBQlDYK",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"debug\":true,\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"61925dd2e944ad3658b933df\",\n            \"data\": {\n                \"VoterIdImage1\": \"https://qa-persist.signzy.xyz/api/files/3001739/download/5e0c281de0704528ba95895ee919aec7cfb8e1e9ccdf4d0789f3156fb42317a8.png\",\n                \"VoterIdImage2\": \"https://qa-persist.signzy.xyz/api/files/3001740/download/e4bcdadfeaa243b08d1652711b9a9f0272110064b29c49df8f7c6e6c550a064c.png\",\n                \"VoterIdEpicNumber\": \"XTE5011390\",\n                \"VoterIdFatherName\": \"Munimare Gowda\",\n                \"VoterIdName\": \"Deepak M\",\n                \"VoterIdDob\": \"28/12/1996\",\n                \"VoterIdYob\": \"1996\",\n                \"VoterIdState\": \"Bangalore\",\n                \"VoterIdAddress\": \"# 30,Gejjegadahalli Dasanapura Hobali Shivanapura Post , BANGALORE NORTH Tq. , Bangalore Dist . - 562162\",\n                \"type\": \"Voter ID\",\n                \"widgetName\": \"Voter ID\"\n            },\n            \"pageName\": \"voi Registered\",\n            \"flowId\": \"61925ee3e944ad3658b933e2\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data VoterIdImage1 is correct\"] = jsonData.result.input.data[0].data.VoterIdImage1 === \"https://qa-persist.signzy.xyz/api/files/3001739/download/5e0c281de0704528ba95895ee919aec7cfb8e1e9ccdf4d0789f3156fb42317a8.png\";\r",
									"\r",
									"tests[\"jsonData.result.data VoterIdImage2 is correct\"] = jsonData.result.input.data[0].data.VoterIdImage2 === \"https://qa-persist.signzy.xyz/api/files/3001740/download/e4bcdadfeaa243b08d1652711b9a9f0272110064b29c49df8f7c6e6c550a064c.png\";\r",
									"tests[\"jsonData.result.data VoterIdEpicNumber is correct\"] = jsonData.result.input.data[0].data.VoterIdEpicNumber === \"XTE5011390\";\r",
									"\r",
									"tests[\"jsonData.result.data VoterIdFatherName is correct\"] = jsonData.result.input.data[0].data.VoterIdFatherName === \"Munimare Gowda\";\r",
									"\r",
									"tests[\"jsonData.result.data VoterIdName is correct\"] = jsonData.result.input.data[0].data.VoterIdName === \"Deepak M\";\r",
									"\r",
									"tests[\"jsonData.result.data VoterIdDob is correct\"] = jsonData.result.input.data[0].data.VoterIdDob === \"28/12/1996\";\r",
									"\r",
									"tests[\"jsonData.result.data VoterIdState is correct\"] = jsonData.result.input.data[0].data.VoterIdState === \"Bangalore\";\r",
									"\r",
									"tests[\"jsonData.result.data VoterIdAddress is correct\"] = jsonData.result.input.data[0].data.VoterIdAddress === \"# 30,Gejjegadahalli Dasanapura Hobali Shivanapura Post , BANGALORE NORTH Tq. , Bangalore Dist . - 562162\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"Voter ID\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.type === \"Voter ID\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"true\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GSTIN",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"619391dc50167e15023677bf\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"gstin\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"619391dc50167e15023677bf\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									" tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"619391dc50167e15023677bf\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"gstin\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"6193907151b8c61a0d5b8e7e\",\n            \"data\": {\n                \"GSTINGstImage\": \"https://preproduction-persist.signzy.tech/api/files/27485995/download/13c502a331614bb196646c20b8581297ffff3b7996df4c4989c66f7a51c75ef7.jpeg\",\n                \"GSTINConstitutionOfBusiness\": \"PROPRIETORSHIP\",\n                \"GSTINLegalNameOfBusiness\": \"ANKIT JIVRAJBHAI KAMARIYA\",\n                \"GSTINTradeNameOfBusiness\": \"ANGEL BIZLINK\",\n                \"GSTINRegistrationDate\": \"01/07/2017\",\n                \"GSTINTaxPayerDate\": false,\n                \"GSTINTaxPayerType\": \"REGULARREGULAR\",\n                \"GSTINCancellationDate\": false,\n                \"GSTINPrincipalPlaceAddress\": \"SHRIMAD BHAVAN OFFICE NO.50 FIRST FLOOR,BHAKTINAGAR SOCIETY ROAD-1,BHAKTINAGAR SOCIETY ROAD,RAJKOT,GUJARAT,360002\",\n \n                \"GSTINStateJurisdiction\": \"GUJARAT\",\n                \"GSTINPrincipalPlaceLongitude\": false,\n                \"GSTINAdditionalPlaceAddress\": \"\",\n                \"GSTINAdditionalPlaceLatitude\": false,\n                \"GSTINAdditionalPlaceLongitude\": false,\n                \"fetchInputGSTINNumber\": \"\",\n                \"type\": \"GSTIN\",\n                \"widgetName\": \"GSTIN\"\n\n            },\n            \"pageName\": \"gstin Registered\",\n            \"flowId\": \"619391dc50167e15023677bf\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data GSTINGstImage is correct\"] = jsonData.result.input.data[0].data.GSTINGstImage === \"https://preproduction-persist.signzy.tech/api/files/27485995/download/13c502a331614bb196646c20b8581297ffff3b7996df4c4989c66f7a51c75ef7.jpeg\";\r",
									"tests[\"jsonData.result.data GSTINConstitutionOfBusiness is correct\"] = jsonData.result.input.data[0].data.GSTINConstitutionOfBusiness === \"PROPRIETORSHIP\";\r",
									"tests[\"jsonData.result.data GSTINLegalNameOfBusiness is correct\"] = jsonData.result.input.data[0].data.GSTINLegalNameOfBusiness === \"ANKIT JIVRAJBHAI KAMARIYA\";\r",
									"\r",
									"tests[\"jsonData.result.data GSTINTradeNameOfBusiness is correct\"] = jsonData.result.input.data[0].data.GSTINTradeNameOfBusiness === \"ANGEL BIZLINK\";\r",
									"\r",
									"tests[\"jsonData.result.data GSTINRegistrationDate is correct\"] = jsonData.result.input.data[0].data.GSTINRegistrationDate === \"01/07/2017\";\r",
									"\r",
									"tests[\"jsonData.result.data GSTINTaxPayerDate is correct\"] = jsonData.result.input.data[0].data.GSTINTaxPayerDate === false;\r",
									"\r",
									"tests[\"jsonData.result.data GSTINTaxPayerType is correct\"] = jsonData.result.input.data[0].data.GSTINTaxPayerType === \"REGULARREGULAR\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.data GSTINCancellationDate is correct\"] = jsonData.result.input.data[0].data.GSTINCancellationDate === false;\r",
									"\r",
									"tests[\"jsonData.result.data GSTINPrincipalPlaceAddress is correct\"] = jsonData.result.input.data[0].data.GSTINPrincipalPlaceAddress === \"SHRIMAD BHAVAN OFFICE NO.50 FIRST FLOOR,BHAKTINAGAR SOCIETY ROAD-1,BHAKTINAGAR SOCIETY ROAD,RAJKOT,GUJARAT,360002\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.data GSTINStateJurisdiction is correct\"] = jsonData.result.input.data[0].data.GSTINStateJurisdiction === \"GUJARAT\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type ===\"GSTIN\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"GSTIN\";\r",
									"pm.test(\"console log\", function () {\r",
									"var jsonData1 = pm.response.json();\r",
									"console.log(jsonData1.results)\r",
									"});\r",
									"\r",
									" tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"false\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SNEC",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"6194891551b8c61a0d5b9731\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"SNECTEST\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"6194891551b8c61a0d5b9731\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									" tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"6194891551b8c61a0d5b9731\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"SNECTEST\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "m7E2qPdKVKcUFAxrQYLm9HizvLdeMECesS68kqA4AVPNejOVHLrABaF2QDBQlDYK",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"6194886a51b8c61a0d5b9718\",\n            \"data\": {\n                \"SNECImage\": \"https://preproduction-persist.signzy.tech/api/files/24970409/download/72251cb60d9945f6b15ab3ba13ba34d94eed569be2f34519a1a65f6d1fcde078.jpg\",\n                \"SNECRegistrationNo\": \"63372392\",\n                \"SNECAddress\": \"Hillow, , Opposite: Government Higher Secondary School Imamsahib\",\n                \"SNECname\": \"Jammu & Kashmir\",\n                \"type\": \"SNEC\",\n                \"widgetName\": \"SNEC\"\n            },\n            \"pageName\": \"snec Registered\",\n            \"flowId\": \"6194891551b8c61a0d5b9731\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data SNECImage is correct\"] = jsonData.result.input.data[0].data.SNECImage === \"https://preproduction-persist.signzy.tech/api/files/24970409/download/72251cb60d9945f6b15ab3ba13ba34d94eed569be2f34519a1a65f6d1fcde078.jpg\";\r",
									"tests[\"jsonData.result.data SNECRegistrationNo is correct\"] = jsonData.result.input.data[0].data.SNECRegistrationNo === \"63372392\";\r",
									"\r",
									"tests[\"jsonData.result.data SNECAddress is correct\"] = jsonData.result.input.data[0].data.SNECAddress === \"Hillow, , Opposite: Government Higher Secondary School Imamsahib\";\r",
									"\r",
									"tests[\"jsonData.result.data SNECname is correct\"] = jsonData.result.input.data[0].data.SNECname === \"Jammu & Kashmir\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"SNEC\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"SNEC\";\r",
									"\r",
									"\r",
									" tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"uncertain\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "VAT",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"6194932b51b8c61a0d5b9785\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"Vat\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"6194932b51b8c61a0d5b9785\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									" tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"6194932b51b8c61a0d5b9785\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"Vat\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "m7E2qPdKVKcUFAxrQYLm9HizvLdeMECesS68kqA4AVPNejOVHLrABaF2QDBQlDYK",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"debug\":true,\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"6194925050167e1502368039\",\n            \"data\": {\n                \"VATImage\": \"https: //preproduction-persist.signzy.tech/api/files/27469443/download/54fcb20cd9c64015890505e0fbbf1cc94760474a29f04d6bb13434bf52f8c97c.png\",\n                \"VATCstStatus\": \"ACTIVE\",\n                \"VATStatus\": \"ACTIVE\",\n                \"VATOwnerName\": \"\",\n                \"VATDealer\": \"BARODA FIBER AND INSULATION\",\n                \"VATAddress\": \"78 3 T,MAKARPURA,GIDC Estate,78 3 T,MAKARPURA,MAKARPURA,VADODARA,VADODARA-390014\",\n                \"VATPan\": \"AARFB0117A\",\n                \"type\": \"VAT\",\n                \"widgetName\": \"VAT\"\n            },\n            \"pageName\": \"Vat Registered\",\n            \"flowId\": \"6194932b51b8c61a0d5b9785\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data VATImage is correct\"] = jsonData.result.input.data[0].data.VATImage === \"https: //preproduction-persist.signzy.tech/api/files/27469443/download/54fcb20cd9c64015890505e0fbbf1cc94760474a29f04d6bb13434bf52f8c97c.png\";\r",
									"tests[\"jsonData.result.data VATCstStatus is correct\"] = jsonData.result.input.data[0].data.VATCstStatus === \"ACTIVE\";\r",
									"tests[\"jsonData.result.data VATStatus is correct\"] = jsonData.result.input.data[0].data.VATStatus === \"ACTIVE\";\r",
									"\r",
									"tests[\"jsonData.result.data VATOwnerName is correct\"] = jsonData.result.input.data[0].data.VATOwnerName === \"\";\r",
									"\r",
									"tests[\"jsonData.result.data VATDealer is correct\"] = jsonData.result.input.data[0].data.VATDealer === \"BARODA FIBER AND INSULATION\";\r",
									"\r",
									"tests[\"jsonData.result.data VATAddress is correct\"] = jsonData.result.input.data[0].data.VATAddress === \"78 3 T,MAKARPURA,GIDC Estate,78 3 T,MAKARPURA,MAKARPURA,VADODARA,VADODARA-390014\";\r",
									"\r",
									"tests[\"jsonData.result.data VATPan is correct\"] = jsonData.result.input.data[0].data.VATPan === \"AARFB0117A\";\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type ===\"VAT\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"VAT\";\r",
									"\r",
									"pm.test(\"console log\", function () {\r",
									"var jsonData1 = pm.response.json();\r",
									"console.log(jsonData1.results)\r",
									"});\r",
									" tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"uncertain\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DE_Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"reportUrl\", jsonData.result.reportUrl);\r",
									"tests[\"jsonData.result finalResult is correct\"] = jsonData.result.finalResult.result=== \"true\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://blender-preproduction.signzy.app/iciciruleengine/getDEReport/{{requestId}}",
							"protocol": "https",
							"host": [
								"blender-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"iciciruleengine",
								"getDEReport",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CST",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"619dc511aec8670cbebe5c68\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"CST QA\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"619dc511aec8670cbebe5c68\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									" tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"619dc511aec8670cbebe5c68\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"CST QA\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "m7E2qPdKVKcUFAxrQYLm9HizvLdeMECesS68kqA4AVPNejOVHLrABaF2QDBQlDYK",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"619dc4973eca130cc432092a\",\n            \"data\": {\n                \"CstImage\": \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\",\n                \"CSTCstStatus\": \"UNICORN\",\n                \"CSTStatus\": \"UNICORN\",\n                \"CSTOwnerName\": \"UNICORN\",\n                \"CSTDealer\": \"UNICORN\",\n                \"CSTAddress\": \"UNICORN\",\n                \"CSTPan\": \"UNICORN\",\n                \"type\": \"CST\",\n                \"widgetName\": \"CST\"\n            },\n            \"pageName\": \"cst Registered\",\n            \"flowId\": \"619dc511aec8670cbebe5c68\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data CstImage is correct\"] = jsonData.result.input.data[0].data.CstImage === \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\";\r",
									"tests[\"jsonData.result.data CSTCstStatus is correct\"] = jsonData.result.input.data[0].data.CSTCstStatus === \"UNICORN\";\r",
									"tests[\"jsonData.result.data CSTStatus is correct\"] = jsonData.result.input.data[0].data.CSTStatus === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data CSTOwnerName is correct\"] = jsonData.result.input.data[0].data.CSTOwnerName === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data CSTDealer is correct\"] = jsonData.result.input.data[0].data.CSTDealer === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data CSTAddress is correct\"] = jsonData.result.input.data[0].data.CSTAddress === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data CSTPan is correct\"] = jsonData.result.input.data[0].data.CSTPan === \"UNICORN\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"CST\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"CST\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"false\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ICAI",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"619dd1bc3eca130cc4320a2f\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"ICAI\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"619dd1bc3eca130cc4320a2f\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									" tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"619dd1bc3eca130cc4320a2f\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"ICAI\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "m7E2qPdKVKcUFAxrQYLm9HizvLdeMECesS68kqA4AVPNejOVHLrABaF2QDBQlDYK",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"619dd0e43eca130cc4320a1e\",\n            \"data\": {\n                \"ICAIImage\": \"https://preproduction-persist.signzy.tech/api/files/27470977/download/fe30141eed654af2982e92f72704bf1bcfb167d677234acc9f4af612ca51bb8c.jpg\",\n                \"ICAIName\": \"GAURAV CHOPRA\",\n                \"ICAIAddress\": \"C/O MACHINERY AGENCIES 3A SURENDRA MOHAN GHOSH SARANI 1ST FLOOR KOLKATA - 700001, WEST BENGAL, INDIA\",\n                \"ICAIstate\": \"WEST BENGAL\",\n                \"ICAIpincode\": \"700001\",\n                \"ICAIStatus\": \"ACTIVE\",\n                \"ICAIcountry\": \"INDIA\",\n                \"type\": \"ICAI\",\n                \"widgetName\": \"ICAI\"\n            },\n            \"pageName\": \"ICAI Registered\",\n            \"flowId\": \"619dd1bc3eca130cc4320a2f\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data ICAIImage is correct\"] = jsonData.result.input.data[0].data.ICAIImage === \"https://preproduction-persist.signzy.tech/api/files/27470977/download/fe30141eed654af2982e92f72704bf1bcfb167d677234acc9f4af612ca51bb8c.jpg\";\r",
									"tests[\"jsonData.result.data ICAIName is correct\"] = jsonData.result.input.data[0].data.ICAIName === \"GAURAV CHOPRA\";\r",
									"tests[\"jsonData.result.data ICAIAddress is correct\"] = jsonData.result.input.data[0].data.ICAIAddress === \"C/O MACHINERY AGENCIES 3A SURENDRA MOHAN GHOSH SARANI 1ST FLOOR KOLKATA - 700001, WEST BENGAL, INDIA\";\r",
									"\r",
									"tests[\"jsonData.result.data ICAIstate is correct\"] = jsonData.result.input.data[0].data.ICAIstate === \"WEST BENGAL\";\r",
									"\r",
									"tests[\"jsonData.result.data ICAIpincode is correct\"] = jsonData.result.input.data[0].data.ICAIpincode === \"700001\";\r",
									"\r",
									"tests[\"jsonData.result.data ICAIStatus is correct\"] = jsonData.result.input.data[0].data.ICAIStatus === \"ACTIVE\";\r",
									"\r",
									"tests[\"jsonData.result.data ICAIcountry is correct\"] = jsonData.result.input.data[0].data.ICAIcountry === \"INDIA\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"ICAI\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"ICAI\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"false\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PTRC",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"619c7b16aec8670cbebe5446\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"PTRC TEST\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"619c7b16aec8670cbebe5446\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									" tests[\"jsonData. data flowId is correct\"] = jsonData.data.flowId === \"619c7b16aec8670cbebe5446\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"PTRC TEST\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "m7E2qPdKVKcUFAxrQYLm9HizvLdeMECesS68kqA4AVPNejOVHLrABaF2QDBQlDYK",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"619c79f13eca130cc43200fe\",\n            \"data\": {\n                \"PTRCImage\": \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\",\n                \"PTRCDealerName\": \"MDK LOGISTICS\",\n                \"PTRCtalukaName\": \"UNICORN\",\n                \"PTRCPinCode\": \"UNICORN\",\n                \"PTRCStatus\": \"UNICORN\",\n                \"PTRCPrincipalAddress\": \"UNICORN\",\n                \"PTRCGstin\": \"UNICORN\",\n                \"type\": \"PTRC\",\n                \"widgetName\": \"PTRC\"\n            },\n            \"pageName\": \"ptrc Registered\",\n            \"flowId\": \"619c7b16aec8670cbebe5446\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data PTRCImage is correct\"] = jsonData.result.input.data[0].data.PTRCImage === \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\";\r",
									"tests[\"jsonData.result.data PTRCDealerName is correct\"] = jsonData.result.input.data[0].data.PTRCDealerName === \"MDK LOGISTICS\";\r",
									"\r",
									"tests[\"jsonData.result.data PTRCtalukaName is correct\"] = jsonData.result.input.data[0].data.PTRCtalukaName === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data PTRCPinCode is correct\"] = jsonData.result.input.data[0].data.PTRCPinCode === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data PTRCStatus is correct\"] = jsonData.result.input.data[0].data.PTRCStatus === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data PTRCPrincipalAddress is correct\"] = jsonData.result.input.data[0].data.PTRCPrincipalAddress === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data PTRCGstin is correct\"] = jsonData.result.input.data[0].data.PTRCGstin === \"UNICORN\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"PTRC\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"PTRC\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"false\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "icsi",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"619f0a1eaec8670cbebe656f\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"icsi\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"619f0a1eaec8670cbebe656f\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.data.flowId === \"619f0a1eaec8670cbebe656f\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"icsi\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "m7E2qPdKVKcUFAxrQYLm9HizvLdeMECesS68kqA4AVPNejOVHLrABaF2QDBQlDYK",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"619f097baec8670cbebe6565\",\n            \"data\": {\n                \"ICSIImage\": \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\",\n                \"ICSICity\": \"UNICORN\",\n                \"ICSIOrganization\": \"UNICORN\",\n                \"ICSIAddress\": \"UNICORN\",\n                \"ICSIpincode\": \"UNICORN\",\n                \"ICSIType\": \"UNICORN\",\n                \"type\": \"ICSI\",\n                \"widgetName\": \"ICSI\"\n            },\n            \"pageName\": \"icsi Registered\",\n            \"flowId\": \"619f0a1eaec8670cbebe656f\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data ICSIImage is correct\"] = jsonData.result.input.data[0].data.ICSIImage === \"https://preproduction-persist.signzy.tech/api/files/27464689/download/68e016f88489490082abf3dbf4cf050d116d511e9d2a4b01a35eb360b043250a.jpg\";\r",
									"tests[\"jsonData.result.data ICSICity is correct\"] = jsonData.result.input.data[0].data.ICSICity === \"UNICORN\";\r",
									"tests[\"jsonData.result.data ICSIOrganization is correct\"] = jsonData.result.input.data[0].data.ICSIOrganization === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data ICSIAddress is correct\"] = jsonData.result.input.data[0].data.ICSIAddress === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data ICSIpincode is correct\"] = jsonData.result.input.data[0].data.ICSIpincode === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data ICSIType is correct\"] = jsonData.result.input.data[0].data.ICSIType === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"ICSI\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"ICSI\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"false\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MCI",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"619f10033eca130cc43212b7\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"MCI\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"619f10033eca130cc43212b7\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.data.flowId === \"619f10033eca130cc43212b7\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"MCI\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"619f0f933eca130cc43212b6\",\n            \"data\": {\n                \"MCIImage\": \"https://preproduction-persist.signzy.tech/api/files/27470849/download/e4210bc0e810459da3fbc75effb5a62ba600e8269b5246fd99938d5d51f77d9a.jpg\",\n                \"fetchInputMCIQualificationYear\": \"UNICORN\",\n                \"MCIName\": \"MAHAJAN CHETAN\",\n                \"MCIPermanentAddress\": \"VILL.MANGTIAN DHAMAL)P.O.HAMIRPUR,TEH.HIRANAGAR,DISTT.KATHUA J&K\",\n                \"MCIDateOfReg\": \"29.12.2007\",\n                \"type\": \"MCI\",\n                \"widgetName\": \"MCI\"\n            },\n            \"pageName\": \"mci Registered\",\n            \"flowId\": \"619f10033eca130cc43212b7\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data MCIImage is correct\"] = jsonData.result.input.data[0].data.MCIImage === \"https://preproduction-persist.signzy.tech/api/files/27470849/download/e4210bc0e810459da3fbc75effb5a62ba600e8269b5246fd99938d5d51f77d9a.jpg\";\r",
									"tests[\"jsonData.result.data fetchInputMCIQualificationYear is correct\"] = jsonData.result.input.data[0].data.fetchInputMCIQualificationYear === \"UNICORN\";\r",
									"tests[\"jsonData.result.data MCIName is correct\"] = jsonData.result.input.data[0].data.MCIName === \"MAHAJAN CHETAN\";\r",
									"\r",
									"tests[\"jsonData.result.data MCIPermanentAddress is correct\"] = jsonData.result.input.data[0].data.MCIPermanentAddress === \"VILL.MANGTIAN DHAMAL)P.O.HAMIRPUR,TEH.HIRANAGAR,DISTT.KATHUA J&K\";\r",
									"\r",
									"tests[\"jsonData.result.data MCIDateOfReg is correct\"] = jsonData.result.input.data[0].data.MCIDateOfReg === \"29.12.2007\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"MCI\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"MCI\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"uncertain\";\r",
									"\r",
									"//  tests[\"jsonData.result.output finalResult match is correct\"] = pjsonData.result.output.pageResults.jsonData['619f0f933eca130cc43212b6'][0].textMatchData.MCINameMatchScore === 1;\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IEC",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"6195fe9151b8c61a0d5b9bd6\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"IEC QA\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"6195fe9151b8c61a0d5b9bd6\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.data.flowId === \"6195fe9151b8c61a0d5b9bd6\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"IEC QA\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"6195fd05796753418a0c5cab\",\n            \"data\": {\n                \"IecImage\": \"https: //preproduction-persist.signzy.tech/api/files/27470619/download/7737dd59c7d141bd9b548f7c53bd5bf9415a9b6859e54a6f87d16d9690b6dd73.jpg\",\n                \"IECIec\": \"3213000311\",\n                \"IECIecAllotmentDate\": \"03.04.2013\",\n                \"IECFileNumber\": \"3213000311\",\n                \"IECPartyNameAndAddress\": \"SRI GANESH ENGINEERING, 2/166, KOVAI MAIN ROAD, KINATHUKADAVU, POLLACHI TK, Contact COIMBATORE / TAMIL NADU\",\n                \"IECPartyName\": \"SRI GANESH ENGINEERING\",\n                \"IECFileDate\": \"\",\n                \"IECEmail\": \"\",\n                \"IECDateOfEstablishment\": \"\",\n                \"IECPan\": \"AXHPG7968D\",\n                \"IECBankerDetail\": \"\",\n                \"IECNatureOfConcern\": \"\",\n                \"type\": \"IEC\",\n                \"widgetName\": \"IEC\"\n            },\n            \"pageName\": \"mci Registered\",\n            \"flowId\": \"6195fe9151b8c61a0d5b9bd6\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data IecImage is correct\"] = jsonData.result.input.data[0].data.IecImage === \"https: //preproduction-persist.signzy.tech/api/files/27470619/download/7737dd59c7d141bd9b548f7c53bd5bf9415a9b6859e54a6f87d16d9690b6dd73.jpg\";\r",
									" tests[\"jsonData.result.data IECIec is correct\"] = jsonData.result.input.data[0].data.IECIec === \"3213000311\";\r",
									" tests[\"jsonData.result.data IECIecAllotmentDate is correct\"] = jsonData.result.input.data[0].data.IECIecAllotmentDate === \"03.04.2013\";\r",
									"\r",
									" tests[\"jsonData.result.data IECFileNumber is correct\"] = jsonData.result.input.data[0].data.IECFileNumber === \"3213000311\";\r",
									"\r",
									"tests[\"jsonData.result.data IECPartyNameAndAddress is correct\"] = jsonData.result.input.data[0].data.IECPartyNameAndAddress === \"SRI GANESH ENGINEERING, 2/166, KOVAI MAIN ROAD, KINATHUKADAVU, POLLACHI TK, Contact COIMBATORE / TAMIL NADU\";\r",
									"\r",
									" tests[\"jsonData.result.data IECPartyName is correct\"] = jsonData.result.input.data[0].data.IECPartyName === \"SRI GANESH ENGINEERING\";\r",
									"\r",
									" tests[\"jsonData.result.data IECFileDate is correct\"] = jsonData.result.input.data[0].data.IECFileDate === \"\";\r",
									"\r",
									"tests[\"jsonData.result.data IECEmail is correct\"] = jsonData.result.input.data[0].data.IECEmail === \"\";\r",
									"tests[\"jsonData.result.data IECDateOfEstablishment is correct\"] = jsonData.result.input.data[0].data.IECDateOfEstablishment === \"\";\r",
									"\r",
									"tests[\"jsonData.result.data IECPan is correct\"] = jsonData.result.input.data[0].data.IECPan === \"AXHPG7968D\";\r",
									"\r",
									"tests[\"jsonData.result.data IECBankerDetail is correct\"] = jsonData.result.input.data[0].data.IECBankerDetail === \"\";\r",
									"tests[\"jsonData.result.data IECNatureOfConcern is correct\"] = jsonData.result.input.data[0].data.IECNatureOfConcern === \"\";\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"IEC\";\r",
									"\r",
									" tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"IEC\";\r",
									"\r",
									" tests[\"jsonData.result finalResult is correct\"] = jsonData.result.output.finalResult.result === \"uncertain\";\r",
									"\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DE_Report Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"reportUrl\", jsonData.result.reportUrl);\r",
									"tests[\"jsonData.result finalResult is correct\"] = jsonData.result.finalResult.result=== \"uncertain\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}"
							}
						],
						"url": {
							"raw": "https://blender-preproduction.signzy.app/iciciruleengine/getDEReport/{{requestId}}",
							"protocol": "https",
							"host": [
								"blender-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"iciciruleengine",
								"getDEReport",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TIN",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"6195da2f51b8c61a0d5b9b26\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"TinQA\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"6195da2f51b8c61a0d5b9b26\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.data.flowId === \"6195da2f51b8c61a0d5b9b26\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"TinQA\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"6195d263796753418a0c5bb1\",\n            \"data\": {\n                \"TinImage\": \"https://preproduction-persist.signzy.tech/api/files/27471243/download/2f235acdfd864d8eb21cd6ac5227e99ed9de66c8ed2144229a31e3dfb613651f.jpg\",\n                \"TINCstStatus\": \"UNICORN\",\n                \"TINPan\": \"AAKPL8285C\",\n                \"TINStatus\": \"UNICORN\",\n                \"TINOwnerName\": \"KARAN GOEL\",\n                \"TINDealer\": \"KEVA INDUSTRIES\",\n                \"TINAddress\": \"C-141 FOCAL POINT,PHASE V,LUDHIANA PUNJAB\",\n                \"TINRegDate\": \"\",\n                \"type\": \"TIN\",\n                \"widgetName\": \"TIN\"\n            },\n            \"pageName\": \"tin Registered\",\n            \"flowId\": \"6195da2f51b8c61a0d5b9b26\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data TinImage is correct\"] = jsonData.result.input.data[0].data.TinImage === \"https://preproduction-persist.signzy.tech/api/files/27471243/download/2f235acdfd864d8eb21cd6ac5227e99ed9de66c8ed2144229a31e3dfb613651f.jpg\";\r",
									"tests[\"jsonData.result.data TINCstStatus is correct\"] = jsonData.result.input.data[0].data.TINCstStatus === \"UNICORN\";\r",
									"tests[\"jsonData.result.data TINPan is correct\"] = jsonData.result.input.data[0].data.TINPan === \"AAKPL8285C\";\r",
									"\r",
									"tests[\"jsonData.result.data TINStatus is correct\"] = jsonData.result.input.data[0].data.TINStatus === \"UNICORN\";\r",
									"\r",
									"tests[\"jsonData.result.data TINOwnerName is correct\"] = jsonData.result.input.data[0].data.TINOwnerName === \"KARAN GOEL\";\r",
									"tests[\"jsonData.result.data TINDealer is correct\"] = jsonData.result.input.data[0].data.TINDealer === \"KEVA INDUSTRIES\";\r",
									"tests[\"jsonData.result.data TINAddress is correct\"] = jsonData.result.input.data[0].data.TINAddress === \"C-141 FOCAL POINT,PHASE V,LUDHIANA PUNJAB\";\r",
									"tests[\"jsonData.result.data TINRegDate is correct\"] = jsonData.result.input.data[0].data.TINRegDate === \"\";\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"TIN\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"TIN\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"false\";\r",
									"\r",
									"\r",
									"\r",
									"// pm.test(\"Check TINCstStatusMatchScore\", function () {\r",
									"\r",
									"//     var output = findObjectContaininsLists(jsonData.result.output.pageResults);   \r",
									"//     pm.expect(output.pageResults.textMatchData.TINCstStatusMatchScore).to.eql(0.3);\r",
									"//     pm.expect(output.pageResults.textMatchData.TINPanMatchScore[0]).to.eql(0.16);\r",
									"    \r",
									"// pm.expect(jsonData.output.pageResults.6195d263796753418a0c5bb1[0].textMatchData.TINCstStatusMatchScore).to.be(0.3);\r",
									"// });\r",
									"\r",
									"\r",
									"  \r",
									"// pm.expect(jsonData.output.pageResults.6195d263796753418a0c5bb1[0].textMatchData.TINCstStatusMatchScore).to.be(0.3);\r",
									"\r",
									"   tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.pageResults[\"6195d263796753418a0c5bb1\"][0].textMatchData.TINCstStatusMatchScore === 0.3;\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Fssai",
			"item": [
				{
					"name": "Backops login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"GODE_Backops\",\n    \"password\": \"&;<]c)S6G5\",\n    \"realm\" : \"godetesting\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/backopsusers/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"backopsusers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"jsonData. email is correct\"] = jsonData.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. mobile is correct\"] = jsonData.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.flowId === \"619b26f6d51f330e0939f667\";\r",
									"tests[\"jsonData. realm is correct\"] = jsonData.realm === \"godetesting\";\r",
									"tests[\"jsonData. applicationId is correct\"] = jsonData.applicationId === \"61779cc293e86ebf59512365\";\r",
									"tests[\"jsonData. flowDetails name is correct\"] = jsonData.flowDetails.name === \"Fssai\";\r",
									"tests[\"jsonData. flowDetails type is correct\"] = jsonData.flowDetails.type === \"mainflow\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const  username='Vinod_'+_.random(1,1000);\r",
									"console.log(username);\r",
									"//const stringWithVars = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
									"postman.setEnvironmentVariable(\"username\", username);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ravi\",\n    \"username\": \"{{username}}\",\n    \"email\": \"ravi@signzy.com\",\n    \"mobile\": \"54545454656\",\n    \"realm\": \"godetesting\",\n    \"password\": \"1234\",\n    \"backopsUserId\": \"icici_de\",\n    \"flowId\": \"619b26f6d51f330e0939f667\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/applications/61779cc293e86ebf59512365/merchants",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"applications",
								"61779cc293e86ebf59512365",
								"merchants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"id\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"userId\", jsonData.userId);\r",
									"tests[\"jsonData. data email is correct\"] = jsonData.data.email === \"ravi@signzy.com\";\r",
									"tests[\"jsonData. data mobile is correct\"] = jsonData.data.mobile === \"54545454656\";\r",
									"tests[\"jsonData. flowId is correct\"] = jsonData.data.flowId === \"619b26f6d51f330e0939f667\";\r",
									"tests[\"jsonData. data realm is correct\"] = jsonData.data.realm === \"godetesting\";\r",
									"\r",
									"tests[\"jsonData. data applicationId is correct\"] = jsonData.data.applicationId === \"61779cc293e86ebf59512365\";\r",
									"\r",
									"tests[\"jsonData.data.flowDetails name is correct\"] = jsonData.data.flowDetails.name === \"Fssai\";\r",
									"tests[\"jsonData.data.flowDetails type is correct\"] = jsonData.data.flowDetails.type === \"mainflow\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\"username\": \"{{username}}\",\n \"password\": \"1234\",\n \"realm\": \"godetesting\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/merchants/login",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"merchants",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Runcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"requestId\", jsonData.result.requestId);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mode\": \"push\",\n    \"data\": [\n        {\n            \"pageId\": \"619b243d1e028aa6e10d3232\",\n            \"data\": {\n               \"FSSAIImage\": \"https://qa-persist.signzy.xyz/api/files/3001084/download/6747dc1061da40e19325265ff7b881dcaa503b45a9ab46f89aef543f638b80e8.jpg\",\n                \"FSSAIEntityName\": \"Ashmeet Enterprises.\",\n                \"FSSAIstatus\": \"23320006002036\",\n                \"FSSAILicenseType\": \"Food Vending Establishment\",\n                \"FSSAIAddressLine\": \"11/115, Subash Nagar, Delhi-110027, Tatarpur, Rajouri Garden, West Delhi-110027\",\n                \"type\": \"FSSAI\",\n                \"widgetName\": \"FSSAI\"\n\n            },\n            \"pageName\": \"fssai Registered\",\n            \"flowId\": \"619b26f6d51f330e0939f667\",\n            \"pageType\": \"Data&Document\",\n            \"isSubflow\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/runChecks/61779cc293e86ebf59512365/{{userId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"runChecks",
								"61779cc293e86ebf59512365",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDEResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"jsonData.result.data FSSAIImage is correct\"] = jsonData.result.input.data[0].data.FSSAIImage === \"https://qa-persist.signzy.xyz/api/files/3001084/download/6747dc1061da40e19325265ff7b881dcaa503b45a9ab46f89aef543f638b80e8.jpg\";\r",
									"tests[\"jsonData.result.data FSSAIEntityName is correct\"] = jsonData.result.input.data[0].data.FSSAIEntityName === \"Ashmeet Enterprises.\";\r",
									"tests[\"jsonData.result.data FSSAIstatus is correct\"] = jsonData.result.input.data[0].data.FSSAIstatus === \"23320006002036\";\r",
									"\r",
									"tests[\"jsonData.result.data FSSAILicenseType is correct\"] = jsonData.result.input.data[0].data.FSSAILicenseType === \"Food Vending Establishment\";\r",
									"\r",
									"tests[\"jsonData.result.data FSSAIAddressLine is correct\"] = jsonData.result.input.data[0].data.FSSAIAddressLine === \"11/115, Subash Nagar, Delhi-110027, Tatarpur, Rajouri Garden, West Delhi-110027\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.data type is correct\"] = jsonData.result.input.data[0].data.type === \"FSSAI\";\r",
									"\r",
									"tests[\"jsonData.result.data widgetName is correct\"] = jsonData.result.input.data[0].data.widgetName === \"FSSAI\";\r",
									"\r",
									"\r",
									"tests[\"jsonData.result.output finalResult is correct\"] = jsonData.result.output.finalResult.result === \"uncertain\";\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "GKUb97exLIHUi4vTHQ3Z02K8G0GjqYfODwvgj04WmX6u9CiYHUbeTNaAizI4pgDA"
							}
						],
						"url": {
							"raw": "https://go-preproduction.signzy.app/api/checks/getDEResult/{{requestId}}",
							"protocol": "https",
							"host": [
								"go-preproduction",
								"signzy",
								"app"
							],
							"path": [
								"api",
								"checks",
								"getDEResult",
								"{{requestId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}